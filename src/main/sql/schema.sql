-- DROP TABLE
DROP TABLE IF EXISTS TOTAL_FILM_LIKE CASCADE;
DROP TABLE IF EXISTS TOTAL_GENRE_FILM CASCADE;
DROP TABLE IF EXISTS TOTAL_USER_FRIENDS CASCADE;
DROP TABLE IF EXISTS ENUM_MPA CASCADE;
DROP TABLE IF EXISTS ENUM_GENRE CASCADE;
DROP TABLE IF EXISTS ENUM_STATUS_FRIENDS CASCADE;
DROP TABLE IF EXISTS USERS CASCADE;
DROP TABLE IF EXISTS FILMS CASCADE;

-- CREATE TABLES
CREATE TABLE IF NOT EXISTS ENUM_MPA (
    ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME VARCHAR(10) NOT NULL,
    DESCRIPTION VARCHAR NOT NULL,
    CONSTRAINT UC_ENUM_MPA_NAME UNIQUE (NAME)
);

CREATE TABLE IF NOT EXISTS ENUM_GENRE (
    ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME VARCHAR(30) NOT NULL,
    CONSTRAINT UC_ENUM_GENRE_NAME UNIQUE (NAME)
);

CREATE TABLE IF NOT EXISTS ENUM_STATUS_FRIENDS (
    ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME VARCHAR(30) NOT NULL,
    CONSTRAINT UC_ENUM_STATUS_FRIENDS_NAME UNIQUE (NAME)
);

CREATE TABLE IF NOT EXISTS USERS (
    ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME VARCHAR(30) NOT NULL,
    BIRTHDAY DATE NOT NULL,
    LOGIN VARCHAR(30) NOT NULL,
    EMAIL VARCHAR(50) NOT NULL,
    CONSTRAINT UC_USERS_LOGIN UNIQUE (LOGIN),
    CONSTRAINT UC_USERS_EMAIL UNIQUE (EMAIL)
);

CREATE TABLE IF NOT EXISTS FILMS (
    ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    MPA_ID INTEGER REFERENCES ENUM_MPA (ID) ON DELETE SET NULL,
    RATE INTEGER DEFAULT 0,
    NAME VARCHAR(50) NOT NULL,
    DESCRIPTION VARCHAR(200) NOT NULL DEFAULT '',
    RELEASE_DATE DATE NOT NULL,
    DURATION INTEGER NOT NULL,
    CONSTRAINT UC_FILMS_NAME UNIQUE (NAME)
);

CREATE TABLE IF NOT EXISTS TOTAL_FILM_LIKE (
    FILM_ID INTEGER REFERENCES FILMS (ID) ON DELETE CASCADE,
    USER_ID INTEGER REFERENCES USERS (ID) ON DELETE CASCADE,
    PRIMARY KEY (FILM_ID, USER_ID)
);

CREATE TABLE IF NOT EXISTS TOTAL_GENRE_FILM (
    FILM_ID INTEGER NOT NULL REFERENCES FILMS (ID) ON DELETE CASCADE,
    GENRE_ID INTEGER NOT NULL REFERENCES ENUM_GENRE (ID) ON DELETE CASCADE,
    PRIMARY KEY (FILM_ID, GENRE_ID)
);

CREATE TABLE IF NOT EXISTS TOTAL_USER_FRIENDS (
    USER_ID INTEGER REFERENCES USERS (ID) ON DELETE CASCADE,
    FRIEND_ID INTEGER REFERENCES USERS (ID) ON DELETE CASCADE,
    STATUS_ID INTEGER REFERENCES ENUM_STATUS_FRIENDS (ID) ON DELETE SET NULL,
    PRIMARY KEY (USER_ID, FRIEND_ID)
);